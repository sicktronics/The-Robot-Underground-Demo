// INA1, INA2
byte leftForward = 1;
byte leftBackward = 2;
// PWMA
byte leftPWM = 3;


// INB1, INB2
byte rightForward = 4;
byte rightBackward = 5;
// PWMB
byte rightPWM = 6;

// Other global variables
int speed = 100;
void driveForward(int time);
void driveBackward(int time);
void turnLeft(int time);
void turnRight(int time);


void setup() {

  pinMode(leftBackward, OUTPUT);
  pinMode(leftForward, OUTPUT);
  pinMode(leftPWM, OUTPUT);
  pinMode(rightForward, OUTPUT);
  pinMode(rightBackward, OUTPUT);
  pinMode(rightPWM, OUTPUT);
  int driveTime = 1000;
  driveForward(driveTime);
delay(1000);
  driveForward(driveTime+1000);
delay(1000*2);
 
}

void loop() {

}

void driveForward(int time){
  // FORWARD PINS HIGH, BACKWARD LOW
  digitalWrite(leftForward, HIGH);
  digitalWrite(leftBackward, LOW);
  digitalWrite(rightForward, HIGH);
  digitalWrite(rightBackward, LOW);

  // PWM VALUE CORRESPONDS TO SPEED (0-255)
  analogWrite(leftPWM, speed);
  analogWrite(rightPWM, speed);

  // DELAY IN MS
  delay(time);

  // ALWAYS END WITH PWM WRITTEN TO ZERO
  analogWrite(leftPWM, 0);
  analogWrite(rightPWM, 0);
}

void driveBackward(int time){
  // FORWARD PINS LOW, BACKWARD HIGH
  digitalWrite(leftForward, LOW);
  digitalWrite(leftBackward, HIGH);
  digitalWrite(rightForward, LOW);
  digitalWrite(rightBackward, HIGH);

  // PWM VALUE CORRESPONDS TO SPEED (0-255)
  analogWrite(leftPWM, speed);
  analogWrite(rightPWM, speed);

  // DELAY IN MS
  delay(time);

  // ALWAYS END WITH PWM WRITTEN TO ZERO
  analogWrite(leftPWM, 0);
  analogWrite(rightPWM, 0);
}

void turnLeft(int time){
  digitalWrite(leftForward, LOW);
  digitalWrite(leftBackward, HIGH);
  digitalWrite(rightForward, HIGH);
  digitalWrite(rightBackward, LOW);

  // PWM VALUE CORRESPONDS TO SPEED (0-255)
  analogWrite(leftPWM, speed);
  analogWrite(rightPWM, speed);

  // DELAY IN MS
  delay(time);

  // ALWAYS END WITH PWM WRITTEN TO ZERO
  analogWrite(leftPWM, 0);
  analogWrite(rightPWM, 0);
}

void turnRight(int time){
  digitalWrite(leftForward, HIGH);
  digitalWrite(leftBackward, LOW);
  digitalWrite(rightForward, LOW);
  digitalWrite(rightBackward, HIGH);

  // PWM VALUE CORRESPONDS TO SPEED (0-255)
  analogWrite(leftPWM, speed);
  analogWrite(rightPWM, speed);

  // DELAY IN MS
  delay(time);

  // ALWAYS END WITH PWM WRITTEN TO ZERO
  analogWrite(leftPWM, 0);
  analogWrite(rightPWM, 0);
}
